//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace BookReviewWebClient.BookService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Book", Namespace="http://schemas.datacontract.org/2004/07/BookReviewService.Models")]
    [System.SerializableAttribute()]
    public partial class Book : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AuthorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BookNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CategoryField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int OverrallRatingField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int PublishedYearField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PublisherField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Author {
            get {
                return this.AuthorField;
            }
            set {
                if ((object.ReferenceEquals(this.AuthorField, value) != true)) {
                    this.AuthorField = value;
                    this.RaisePropertyChanged("Author");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string BookName {
            get {
                return this.BookNameField;
            }
            set {
                if ((object.ReferenceEquals(this.BookNameField, value) != true)) {
                    this.BookNameField = value;
                    this.RaisePropertyChanged("BookName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Category {
            get {
                return this.CategoryField;
            }
            set {
                if ((object.ReferenceEquals(this.CategoryField, value) != true)) {
                    this.CategoryField = value;
                    this.RaisePropertyChanged("Category");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int OverrallRating {
            get {
                return this.OverrallRatingField;
            }
            set {
                if ((this.OverrallRatingField.Equals(value) != true)) {
                    this.OverrallRatingField = value;
                    this.RaisePropertyChanged("OverrallRating");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int PublishedYear {
            get {
                return this.PublishedYearField;
            }
            set {
                if ((this.PublishedYearField.Equals(value) != true)) {
                    this.PublishedYearField = value;
                    this.RaisePropertyChanged("PublishedYear");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Publisher {
            get {
                return this.PublisherField;
            }
            set {
                if ((object.ReferenceEquals(this.PublisherField, value) != true)) {
                    this.PublisherField = value;
                    this.RaisePropertyChanged("Publisher");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="BookService.IBookOperationService")]
    public interface IBookOperationService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBookOperationService/AddBook", ReplyAction="http://tempuri.org/IBookOperationService/AddBookResponse")]
        BookReviewWebClient.BookService.Book AddBook(BookReviewWebClient.BookService.Book book);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBookOperationService/AddBook", ReplyAction="http://tempuri.org/IBookOperationService/AddBookResponse")]
        System.Threading.Tasks.Task<BookReviewWebClient.BookService.Book> AddBookAsync(BookReviewWebClient.BookService.Book book);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBookOperationService/GetBooks", ReplyAction="http://tempuri.org/IBookOperationService/GetBooksResponse")]
        BookReviewWebClient.BookService.Book[] GetBooks();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBookOperationService/GetBooks", ReplyAction="http://tempuri.org/IBookOperationService/GetBooksResponse")]
        System.Threading.Tasks.Task<BookReviewWebClient.BookService.Book[]> GetBooksAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBookOperationService/FindBookByName", ReplyAction="http://tempuri.org/IBookOperationService/FindBookByNameResponse")]
        BookReviewWebClient.BookService.Book[] FindBookByName(string query);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBookOperationService/FindBookByName", ReplyAction="http://tempuri.org/IBookOperationService/FindBookByNameResponse")]
        System.Threading.Tasks.Task<BookReviewWebClient.BookService.Book[]> FindBookByNameAsync(string query);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IBookOperationServiceChannel : BookReviewWebClient.BookService.IBookOperationService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class BookOperationServiceClient : System.ServiceModel.ClientBase<BookReviewWebClient.BookService.IBookOperationService>, BookReviewWebClient.BookService.IBookOperationService {
        
        public BookOperationServiceClient() {
        }
        
        public BookOperationServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public BookOperationServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BookOperationServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BookOperationServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public BookReviewWebClient.BookService.Book AddBook(BookReviewWebClient.BookService.Book book) {
            return base.Channel.AddBook(book);
        }
        
        public System.Threading.Tasks.Task<BookReviewWebClient.BookService.Book> AddBookAsync(BookReviewWebClient.BookService.Book book) {
            return base.Channel.AddBookAsync(book);
        }
        
        public BookReviewWebClient.BookService.Book[] GetBooks() {
            return base.Channel.GetBooks();
        }
        
        public System.Threading.Tasks.Task<BookReviewWebClient.BookService.Book[]> GetBooksAsync() {
            return base.Channel.GetBooksAsync();
        }
        
        public BookReviewWebClient.BookService.Book[] FindBookByName(string query) {
            return base.Channel.FindBookByName(query);
        }
        
        public System.Threading.Tasks.Task<BookReviewWebClient.BookService.Book[]> FindBookByNameAsync(string query) {
            return base.Channel.FindBookByNameAsync(query);
        }
    }
}
